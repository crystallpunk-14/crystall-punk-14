uniform sampler2D SCREEN_TEXTURE;
uniform lowp int count;
uniform highp vec2[16] position;
uniform highp float[16] radius;
uniform highp vec2 renderScale;

const highp float radiusFalloff = 100.0;

void fragment() {
    highp vec2 fragPos = FRAGCOORD.xy;
    highp float visibility = 0.0;

    highp float scale = renderScale.x;

    for (int i = 0; i < 16 && i < count; i++) {
        highp float scaledRadius = radius[i] * 30.0 * scale;
        highp float dist = length(fragPos - position[i]);
        highp float fade = smoothstep(scaledRadius - radiusFalloff * scale, scaledRadius, dist);
        visibility = max(visibility, 1.0 - fade);
    }

    vec4 baseColor = zTextureSpec(SCREEN_TEXTURE, fragPos * SCREEN_PIXEL_SIZE);
    COLOR = mix(vec4(0, 0, 0, 1), baseColor, visibility);
}
