using Content.Shared._CP14.TravelingStoreShip;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._CP14.TravelingStoreShip;

[GenerateTypedNameReferences]
public sealed partial class CP14StoreWindow : DefaultWindow
{
    [Dependency] private readonly IEntityManager _entity = default!;
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public CP14StoreWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void UpdateUI(CP14StoreUiState state)
    {
        UpdateProducts(state);
        UpdateCash(state);
    }

    private void UpdateProducts(CP14StoreUiState state)
    {
        ProductsContainer.RemoveAllChildren();
        foreach (var product in state.Products)
        {
            var control = new CP14StoreProductControl(product);
            ProductsContainer.AddChild(control);
        }
    }

    private void UpdateCash(CP14StoreUiState state)
    {
        CashPriceHolder.RemoveAllChildren();
        CashPriceHolder.AddChild(new CP14PriceControl(state.Cash));
    }
}
